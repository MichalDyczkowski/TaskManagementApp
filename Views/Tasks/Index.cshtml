@model List<TaskManagementApp.Models.TaskItem>

<div class="container my-4">
    <h2>Strona główna</h2>

    <div class="mb-3">
        <a href="@Url.Action("Create", "Tasks")" class="btn btn-success">Dodaj nowe zadanie</a>
    </div>

    <h3 class="mb-3">Nadchodzące zadania</h3>

    <form method="get" class="mb-4">
        <div class="row">
            <div class="col-md-8">
                <input type="text" name="search" class="form-control" placeholder="Wyszukaj zadania..."
                       value="@Context.Request.Query["search"]" />
            </div>
            <div class="col-md-4">
                <button type="submit" class="btn btn-primary w-100">Szukaj</button>
            </div>
        </div>
    </form>

    <p>
        Sortuj według:
        <a href="@Url.Action("Index", new { sortOrder = "date_asc", search = Context.Request.Query["search"] })" class="text-decoration-none">Data (najpierw najstarsze)</a> |
        <a href="@Url.Action("Index", new { sortOrder = "date_desc", search = Context.Request.Query["search"] })" class="text-decoration-none">Data (najpierw najnowsze)</a> |
        <a href="@Url.Action("Index", new { sortOrder = "title_asc", search = Context.Request.Query["search"] })" class="text-decoration-none">Tytuł (A-Z)</a> |
        <a href="@Url.Action("Index", new { sortOrder = "title_desc", search = Context.Request.Query["search"] })" class="text-decoration-none">Tytuł (Z-A)</a>
    </p>

    @if (Model != null && Model.Any())
    {
        <table class="table table-striped table-hover">
            <thead class="table-light">
                <tr>
                    <th>Tytuł</th>
                    <th>Opis</th>
                    <th>Data wykonania</th>
                    <th>Przypisany użytkownik</th>
                    <th>Akcje</th> 
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model)
                {
                    var daysUntilDue = (task.DueDate - DateTime.Now).TotalDays;
                    <tr class="@(daysUntilDue <= 2 ? "table-danger" : "")">
                        <td>@task.Title</td>
                        <td>@task.Description</td>
                        <td>@task.DueDate.ToString("yyyy-MM-dd")</td>
                        <td>
                            @if (task.AssignedUser != null)
                            {
                                @task.AssignedUser.Email
                            }
                            else
                            {
                                <span class="text-muted">Brak przypisanego użytkownika</span>
                            }
                        </td>
                        <td>
                            <a href="@Url.Action("Edit", "Tasks", new { id = task.Id })" class="btn btn-sm btn-warning">Edytuj</a>
                            <a href="@Url.Action("Delete", "Tasks", new { id = task.Id })" class="btn btn-sm btn-danger">Usuń</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-muted">Brak nadchodzących zadań.</p>
    }
</div>
